@page "/register-membership"
@using System.ComponentModel.DataAnnotations
@inject ISnackbar Snackbar
<EditForm Model="@model" OnValidSubmit="OnValidSubmit">
<DataAnnotationsValidator/>
<MudGrid>
    <MudItem xs="12" sm="7">
        <MudCard>
            <MudCardContent>
                <MudTextField Label="Name" HelperText="Max. 28 characters"
                              @bind-Value="model.Username" For="@(() => model.Username)"/>
                <MudTextField Label="Phone Number" Class="mt-3"
                              @bind-Value="model.Phone" For="@(() => model.Phone)"/>

            </MudCardContent>
            <MudCardActions Class="d-flex justify-center">
                    <MudButton @onclick="@(() => Snackbar.Add("New User Registered", Severity.Success))" ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Register</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem>
    
    <MudItem xs="12">
        <MudText Typo="Typo.body2" Align="Align.Center">
            Fill out the form correctly to see the success message.
        </MudText>
    </MudItem>
</MudGrid>
</EditForm>
@code {
    RegisterAccountForm model = new RegisterAccountForm();
    bool success;

    public class RegisterAccountForm
    {
        [Required]
        [StringLength(28, ErrorMessage = "Name length can't be more than 8.")]
        public string Username { get; set; }

        [Required]
        [Phone]
        public string Phone { get; set; }

        [Required]
        [StringLength(30, ErrorMessage = "Password must be at least 8 characters long.", MinimumLength = 8)]
        public string Password { get; set; }

        [Required]
        [Compare(nameof(Password))]
        public string Password2 { get; set; }

    }

    private void OnValidSubmit()
    {
        success = true;
        StateHasChanged();
        Snackbar.Add("Registered Sucessfully", Severity.Success);
    }

}